#!/bin/sh
#
#
# /etc/init.d/instana-agent -- startup script for Instana Agent
#
#
### BEGIN INIT INFO
# Provides:             instana-agent
# Required-Start:       $remote_fs $network
# Required-Stop:        $remote_fs $network
# Should-Start:         $named
# Should-Stop:          $named
# Default-Start:        2 3 4 5
# Default-Stop:         0 1 6
# Short-Description:    instana-agent
# Description:          Provide Instana Agent startup/shutdown script
### END INIT INFO

NAME=instana-agent
DESC="Instana Agent"
DEFAULT="/etc/default/$NAME"

# Check privileges
if [ `id -u` -ne 0 ]; then
    echo "You need root privileges to run this script"
    exit 1
fi

# Make sure karaf is started with system locale
if [ -r /etc/default/locale ]; then
    . /etc/default/locale
    export LANG
fi

. /lib/lsb/init-functions

if [ -r /etc/default/rcS ]; then
    . /etc/default/rcS
fi

# Overwrite settings from default file
if [ -f "$DEFAULT" ]; then
    . "$DEFAULT"
fi

if [ "x${INSTANA_AGENT_PATH}" = "x" ]; then
    INSTANA_AGENT_PATH="/opt/instana-agent"
fi
export JAVA_HOME

INSTANA_AGENT_LOG="$INSTANA_AGENT_PATH/data/log/instana-agent-console.log"
INSTANA_AGENT_USER="root"
INSTANA_AGENT_GROUP="root"
INSTANA_AGENT_PIDFILE="/var/run/instana-agent.pid"
KARAF_SERVICE_EXECUTABLE=karaf

# Check karaf user
id $INSTANA_AGENT_USER > /dev/null 2>&1
if [ $? -ne 0 -o -z "$INSTANA_AGENT_USER" ]; then
    echo "User \"$INSTANA_AGENT_USER\" does not exist..." >&2
    exit 1
fi

# Check owner of INSTANA_AGENT_PATH
if [ ! $(stat -L -c "%U" "$INSTANA_AGENT_PATH") = $INSTANA_AGENT_USER ]; then
    echo "The user \"$INSTANA_AGENT_USER\" is not owner of \"$INSTANA_AGENT_PATH\"" >&2
    exit 1
fi

# The amount of time to wait for startup
if [ -z "$STARTUP_WAIT" ]; then
    STARTUP_WAIT=30
fi

# The amount of time to wait for shutdown
if [ -z "$SHUTDOWN_WAIT" ]; then
    SHUTDOWN_WAIT=30
fi


# Helper function to check status of karaf service
check_status() {
    pidofproc -p "$INSTANA_AGENT_PIDFILE" "$JAVA_HOME/bin/java" >/dev/null 2>&1
}

case "$1" in
 start)
    echo "Starting $DESC" "$NAME"

    # PID file
    PID_PATH=$(dirname "$INSTANA_AGENT_PIDFILE")
    if [ ! -d "$PID_PATH" ]; then
        mkdir -p "$PID_PATH"
    fi

    chown $INSTANA_AGENT_USER:$INSTANA_AGENT_GROUP "$PID_PATH" || true

    # Console log
    LOG_PATH=$(dirname "$INSTANA_AGENT_LOG")

    if [ ! -d "$LOG_PATH" ]; then
        mkdir -p "$LOG_PATH"
    fi

    cat /dev/null > "$INSTANA_AGENT_LOG"
    chown $INSTANA_AGENT_USER:$INSTANA_AGENT_GROUP "$LOG_PATH"
    chown $INSTANA_AGENT_USER:$INSTANA_AGENT_GROUP "$INSTANA_AGENT_LOG"

    start-stop-daemon \
        --start \
        --user "$INSTANA_AGENT_USER" \
        --chuid "$INSTANA_AGENT_USER" \
        --chdir "$INSTANA_AGENT_PATH" \
        --pidfile "$INSTANA_AGENT_PIDFILE" \
        --make-pidfile \
        --exec "$INSTANA_AGENT_PATH/bin/$KARAF_SERVICE_EXECUTABLE" -- "daemon" \
    >> "$INSTANA_AGENT_LOG" 2>&1 &

    count=0
    launched=0
    until [ $count -gt $STARTUP_WAIT ]
    do
        sleep 1
        count=$((count + 1));
        if check_status; then
            launched=1
            break
        fi
    done

    if check_status; then
        log_end_msg 0
    else
        log_end_msg 1
    fi

    if [ $launched -eq 0 ]; then
        log_warning_msg "$DESC hasn't started within the timeout allowed"
        log_warning_msg "please review file \"$INSTANA_AGENT_LOG\" to see the status of the service"
        exit 1
    fi
 ;;
 stop)
    check_status
    status_stop=$?
    if [ $status_stop -eq 0 ]; then
        kwait=$SHUTDOWN_WAIT
        read kpid < "$INSTANA_AGENT_PIDFILE"
        log_daemon_msg "Stopping $DESC" "$NAME"

        children_pids=$(pgrep -P $kpid)

        su - $INSTANA_AGENT_USER \
            -c "export JAVA_HOME=$JAVA_HOME; \"$INSTANA_AGENT_PATH/bin/$KARAF_SERVICE_EXECUTABLE\" stop"

        count=0
        until [ `ps --pid $kpid 2> /dev/null | grep -c $kpid 2> /dev/null` -eq '0' ] || [ $count -gt $kwait ]
        do
            sleep 1
            count=$((count + 1));
        done

        if check_status; then
            start-stop-daemon \
                --stop \
                --quiet \
                --pidfile "$INSTANA_AGENT_PIDFILE" \
                --user "$INSTANA_AGENT_USER" \
                --retry=TERM/$SHUTDOWN_WAIT/KILL/5 \
            > /dev/null 2>&1

            if [ $? -eq 2 ]; then
                log_failure_msg "$DESC can't be stopped"
                exit 1
            fi
        fi

        for child in $children_pids; do
            /bin/kill -9 $child >/dev/null 2>&1
        done

        log_end_msg 0

        rm -rf "$INSTANA_AGENT_PIDFILE"
    elif [ $status_stop -eq 1 ]; then
        log_action_msg "$DESC is not running but the pid file exists, cleaning up"
        rm -f "$INSTANA_AGENT_PIDFILE"
    elif [ $status_stop -eq 3 ]; then
        log_action_msg "$DESC is not running"
    fi
 ;;
 restart)
    check_status
    status_restart=$?
    if [ $status_restart -eq 0 ]; then
        $0 stop
    fi
    $0 start
 ;;
 status)
    check_status
    status=$?
    if [ $status -eq 0 ]; then
        read pid < $INSTANA_AGENT_PIDFILE
        log_action_msg "$DESC is running with pid $pid"
        exit 0
    elif [ $status -eq 1 ]; then
        log_action_msg "$DESC is not running and the pid file exists"
        exit 1
    elif [ $status -eq 3 ]; then
        log_action_msg "$DESC is not running"
        exit 3
    else
        log_action_msg "Unable to determine $DESC status"
        exit 4
    fi
 ;;
 *)
 log_action_msg "Usage: $0 {start|stop|restart|status}"
 exit 2
 ;;
esac

exit 0
